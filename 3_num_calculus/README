Harvard Applied Math 205: Code Examples
Unit 3: Numerical Calculus
==========================
quadrat.py - Integrates a function using composite trapezoid and Simpson's
rules. Outputs the error as a function of the interval length h. 

diff.py - Constructs a differentiation matrix, and uses it to calculate the
derivative of a test function.

l-v.py - Demonstrates Python's black box integration routine odeint in the
scipy.integrate module. Solves the two-component Lotka–Volterra model for
predator–prey interactions.

euler.py - Demonstrates the simple first-order forward Euler method for
integrating an ordinary differential equation.

e_stab.py - Tests the stability of the choice of timestep in the forward Euler
method

order2.py - Demonstrates three different second-order time-integration
schemes: the modified Euler method, the improved Euler method, and Ralston's
method.

r_extrap.py - Demonstrates applying Richardson extrapolation to the forward
Euler method, to achieve a new method of second order.

ad-bash.py - Solves a differential equation using a second-order
Adams-Bashforth multi-step scheme.

stiff.py - Solves a two-component differential equation that has one stiff
mode. It uses an explict scheme and an implicit scheme. The explicit scheme
has a very strict timestep restriction, while the implicit scheme is
unconditionally stable.

stiff2.py - Demonstrates using Python's black-box stiff solver for the
same two-component differential equation from stiff.py.
